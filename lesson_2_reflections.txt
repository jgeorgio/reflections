Q: What happens when you initialize a repository? Why do you need to do it?

A: When a repository is initialized, a .git directory is created which contains all the Git related files and subdirectories needed to track the project. When working on a new project, a repository is needed to track all changes (commits). 



Q: How is the staging area different from the working directory and the repository? What value do you think it offers?

A: The staging area allows us to prepare and organize the files we would like to commit to the repository. The staging area basically operates as the "middleman" between the working directory (where the project files exist) and the repository (where the project files commit info are saved).



Q: How can you use the staging area to make sure you have one commit per logical change?

A: You can move only the files pertinent to the logical change to the staging area in order to be committed subsequently.



Q: What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A: Branches are helpful in various situations, like when we would like to create a new experimental feature for our project or create a new language version of the project. Branches allow us to make (experimental) changes to our project's code while still allowing us to develop the main project following the existing schedule.



Q: How do the diagrams help you visualize the branch structure?

A: The diagrams help with clarifying when new branches were created off the master branch and help us indentify what the initial commit for each branch was.